#! /usr/bin/perl

# resource_value

use utf8;
use v5.14;
use warnings;
no warnings qw<uninitialized>;

my @acre = map { split //, tr/.|#/oty/r } <>;
my $map_width = 1 + int sqrt @acre;

my (%seen, @area_at, $final_equiv_time);
while (1)
{
  my $state = join '', @acre;
  if (exists $seen{$state})
  {
    my $loop_size = @area_at - $seen{$state};
    $final_equiv_time = $seen{$state} + (1e9 - @area_at) % $loop_size;
    last;
  }
  $seen{$state} = scalar @area_at;
  push @area_at, $state;

  my $pos = 0;
  foreach (@acre)
  {
    my %adjacent;
    foreach my $Δ (-$map_width - 1, -$map_width, -$map_width + 1, -1, +1, +$map_width - 1, +$map_width, +$map_width + 1)
    {
      my $adjacent_pos = $pos + $Δ;
      $adjacent{lc $acre[$adjacent_pos]}++ if $adjacent_pos >= 0 && $adjacent_pos < @acre;
    }
    $pos++;

    s/o/O/ if     $adjacent{t} >= 3;
    s/t/T/ if     $adjacent{y} >= 3;
    s/y/Y/ unless $adjacent{y} && $adjacent{t};
  }

  tr/OTY/tyo/ foreach @acre;
}
say tr/t// * tr/y// foreach @area_at[10, $final_equiv_time];
