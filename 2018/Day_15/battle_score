#! /usr/bin/perl

# battle_score

use utf8;
use v5.14;
use warnings;
use experimental qw<signatures>;

my (@map, @unit);
while (<>)
{
  push @unit, {type => $1, x => $-[1], y => scalar @map} while /([EG])/g;
  push @map, [split //];
}

foreach (@unit)
{
  my $next_pos = nearest_target($_->{type} eq 'E' ? 'G' : 'E', \@map, {x => $_->{x}, y => $_->{y}});
  say "$_->{type}($_->{x},$_->{y}) -> ($next_pos->{x},$next_pos->{y})";
  # move before checking next one
}
# sort for next time

sub nearest_target($target_type, $map, $pos)
{ 
  my @queue = ($pos);
  my %tried = ("@$pos{qw<x y>}" => 1);
  while (my $pos = shift @queue)
  {
    foreach ({y => -1}, {x => -1}, {x => +1}, {y => +1})
    {
      my ($axis, $Δ) = %$_;
      my %try_pos = %$pos;
      $try_pos{$axis} += $Δ;
      my $thing = $map->[$try_pos{y}][$try_pos{x}];
      $try_pos{first_step} //= {x => $try_pos{x}, y => $try_pos{y}};
      return $try_pos{first_step} if $thing eq $target_type;
      push @queue, \%try_pos if $thing eq '.' && !$tried{"@try_pos{qw<x y>}"}++;
    }
  }
}
