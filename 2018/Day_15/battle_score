#! /usr/bin/perl

# battle_score

use utf8;
use v5.14;
use warnings;
use experimental qw<signatures>;

$/ = undef;
my $input = <>;
my $map_width = 1 + index $input, "\n";
my (%space, %unit);
$space{$-[0]} = 1            while $input =~ /[^#\n]/g;
$unit{ $-[0]} = {type => $1} while $input =~ /([EG])/g;

foreach my $pos (sort { $a <=> $b } keys %unit)
{
  my $next_pos = nearest_target($unit{$pos}{type}, $map_width, \%space, \%unit, $pos);
  $unit{$next_pos} = delete $unit{$pos};
}
use DDP;
p %unit;

sub nearest_target($my_type, $map_width, $space, $unit, $from)
{ 
  my @queue = ({pos => $from});
  my %tried;
  while (my $here = shift @queue)
  {
    foreach my $Δ (-$map_width, -1, +1, +$map_width)
    {
      my $pos        = $here->{pos} + $Δ;
      my $first_step = $here->{first_step} // $pos;
      return $first_step if $unit->{$pos} && $unit->{$pos}{type} ne $my_type;
      push @queue, {pos => $pos, first_step => $first_step} if $space->{$pos} && !$unit{$pos} && !$tried{$pos}++;
    }
  }
}
