#! /usr/bin/perl

# efficient_repeated_frequency

use v5.14;
use warnings;
use List::AllUtils qw<nsort_by>;

my @state = (0);
push @state, $state[-1] + $_ while <>;
my $modulus = pop @state;

my ($pos, %group);
push @{$group{$_ % $modulus}}, {freq => $_, pos => ++$pos} foreach @state;

my ($min_diff, $min_pos, $first_repeat);
foreach (values %group)
{
  my @state = nsort_by { $_->{freq} } @$_;
  for (1 .. $#state)
  {
    my $diff = $state[$_]{freq} - $state[$_ - 1]{freq};
    if (!defined $min_diff || $diff < $min_diff
        || $diff == $min_diff && $state[$_ - 1]{pos} < $min_pos)
    {
      $min_diff = $diff;
      $min_pos = $state[$_ - 1]{pos};
      $first_repeat = $state[$_]{freq};
    }
  }
}
say $first_repeat;
