#! /usr/bin/perl

# efficient_repeated_frequency

use v5.14;
use warnings;
use List::AllUtils qw<sum partition_by nsort_by>;

my @change = <>;
my $offset = sum @change;
pop @change;

my %group = partition_by { $_->{freq} % $offset }
    map { {pos => ++(state $pos), freq => state $freq += $_} } 0, @change;

my %min;
foreach (values %group)
{
  my @state = nsort_by { $_->{freq} } @$_;
  for (1 .. $#state)
  {
    my $diff = $state[$_]{freq} - $state[$_ - 1]{freq};
    %min =
        (diff => $diff, pos => $state[$_ - 1]{pos}, repeat => $state[$_]{freq})
        if !%min || $diff < $min{diff}
            || $diff == $min{diff} && $state[$_ - 1]{pos} < $min{pos};
  }
}
say $min{repeat};
