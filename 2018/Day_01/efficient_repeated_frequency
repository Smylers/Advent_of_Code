#! /usr/bin/perl

# efficient_repeated_frequency

use v5.14;
use warnings;
use List::AllUtils qw<partition_by nsort_by>;

my ($pos, $modulus);
my @change = <>;

my %group = partition_by { $_->{freq} % ($modulus + $change[-1]) }
    map { {pos => ++$pos, freq => $modulus += $_} }
    0, @change[0 .. $#change - 1];

my ($min_diff, $min_pos, $first_repeat);
foreach (values %group)
{
  my @state = nsort_by { $_->{freq} } @$_;
  for (1 .. $#state)
  {
    my $diff = $state[$_]{freq} - $state[$_ - 1]{freq};
    if (!defined $min_diff || $diff < $min_diff
        || $diff == $min_diff && $state[$_ - 1]{pos} < $min_pos)
    {
      $min_diff = $diff;
      $min_pos = $state[$_ - 1]{pos};
      $first_repeat = $state[$_]{freq};
    }
  }
}
say $first_repeat;
