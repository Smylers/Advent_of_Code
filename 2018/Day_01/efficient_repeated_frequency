#! /usr/bin/perl

# efficient_repeated_frequency

use v5.14;
use warnings;
use List::AllUtils qw<sum partition_by nsort_by>;

my @change = <>;
my $offset = sum @change;
pop @change;

my %group = partition_by { $_->{freq} % $offset }
    map { {pos => ++(state $pos), freq => state $freq += $_} } 0, @change;

my %min;
foreach (values %group)
{
  my $prev;
  foreach (nsort_by { $_->{freq} } @$_)
  {
    next if !defined $prev;
    my $diff = $_->{freq} - $prev->{freq};
    %min = (diff => $diff, pos => $prev->{pos}, repeat => $_->{freq})
        if !%min || $diff < $min{diff}
            || $diff == $min{diff} && $prev->{pos} < $min{pos};
  } continue { $prev = $_ }
}
say $min{repeat};
