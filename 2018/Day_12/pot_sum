#! /usr/bin/perl

# pot_sum

use v5.20;
use warnings;
use experimental qw<signatures>;
use Getopt::Long qw<GetOptions>; use List::AllUtils qw<sum>;
GetOptions('n=i' => \(my $MaxGen = 20)) or die "$0: Unrecognized options\n";

sub plant_sum($pots, $pos) { sum map { $pos++ * ($_ eq 'x') } split //, $pots }

$_ = <> =~ /([#.]+)/ && $1 =~ tr/#./xo/r;

my $rule = join '|', map { tr/#./xo/; /^(..)(.)(..)/; "(?<=$1)$2(?=$3)" } grep { /#$/ } <>;

my $offset = 0;
for my $gen (1 .. $MaxGen)
{
  s/^o*/ooo/; $offset -= 3 - length $&;
  s/o*$/ooo/;

  state %prev;
  $prev{sum}  = plant_sum($_, $offset)  if $_ eq ($prev{pots} // '');
  $prev{pots} = $_;

  s/$rule/\u$&/gi;
  s/[ox]/o/g;
  s/[OX]/x/g;

  if (defined $prev{sum})
  {
    my $sum = plant_sum($_, $offset);
    say $sum + ($sum - $prev{sum}) * ($MaxGen - $gen);
    exit;
  }
}
say plant_sum($_, $offset);
